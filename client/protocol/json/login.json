{
  "protocol" : "login",
  "namespace" : "keybase.1",
  "types" : [ {
    "type" : "record",
    "name" : "Time",
    "fields" : [ ],
    "typedef" : "long"
  }, {
    "type" : "record",
    "name" : "StringKVPair",
    "fields" : [ {
      "name" : "key",
      "type" : "string"
    }, {
      "name" : "value",
      "type" : "string"
    } ]
  }, {
    "type" : "record",
    "name" : "Status",
    "fields" : [ {
      "name" : "code",
      "type" : "int"
    }, {
      "name" : "name",
      "type" : "string"
    }, {
      "name" : "desc",
      "type" : "string"
    }, {
      "name" : "fields",
      "type" : {
        "type" : "array",
        "items" : "StringKVPair"
      }
    } ]
  }, {
    "type" : "record",
    "name" : "UID",
    "fields" : [ ],
    "typedef" : "string"
  }, {
    "type" : "record",
    "name" : "DeviceID",
    "fields" : [ ],
    "typedef" : "string"
  }, {
    "type" : "record",
    "name" : "SigID",
    "fields" : [ ],
    "typedef" : "string"
  }, {
    "type" : "record",
    "name" : "KID",
    "fields" : [ ],
    "typedef" : "string"
  }, {
    "type" : "record",
    "name" : "Text",
    "fields" : [ {
      "name" : "data",
      "type" : "string"
    }, {
      "name" : "markup",
      "type" : "boolean"
    } ]
  }, {
    "type" : "record",
    "name" : "PGPIdentity",
    "fields" : [ {
      "name" : "username",
      "type" : "string"
    }, {
      "name" : "comment",
      "type" : "string"
    }, {
      "name" : "email",
      "type" : "string"
    } ]
  }, {
    "type" : "record",
    "name" : "PublicKey",
    "fields" : [ {
      "name" : "KID",
      "type" : "KID"
    }, {
      "name" : "PGPFingerprint",
      "type" : "string"
    }, {
      "name" : "PGPIdentities",
      "type" : {
        "type" : "array",
        "items" : "PGPIdentity"
      }
    }, {
      "name" : "isSibkey",
      "type" : "boolean"
    }, {
      "name" : "isEldest",
      "type" : "boolean"
    }, {
      "name" : "parentID",
      "type" : "string"
    }, {
      "name" : "deviceID",
      "type" : "DeviceID"
    }, {
      "name" : "deviceDescription",
      "type" : "string"
    }, {
      "name" : "deviceType",
      "type" : "string"
    }, {
      "name" : "cTime",
      "type" : "Time"
    }, {
      "name" : "eTime",
      "type" : "Time"
    } ]
  }, {
    "type" : "record",
    "name" : "User",
    "fields" : [ {
      "name" : "uid",
      "type" : "UID"
    }, {
      "name" : "username",
      "type" : "string"
    } ]
  }, {
    "type" : "record",
    "name" : "Device",
    "fields" : [ {
      "name" : "type",
      "type" : "string"
    }, {
      "name" : "name",
      "type" : "string"
    }, {
      "name" : "deviceID",
      "type" : "DeviceID"
    }, {
      "name" : "cTime",
      "type" : "Time"
    }, {
      "name" : "mTime",
      "type" : "Time"
    } ]
  }, {
    "type" : "record",
    "name" : "Stream",
    "fields" : [ {
      "name" : "fd",
      "type" : "int"
    } ]
  }, {
    "type" : "enum",
    "name" : "LogLevel",
    "symbols" : [ "NONE_0", "DEBUG_1", "INFO_2", "NOTICE_3", "WARN_4", "ERROR_5", "CRITICAL_6", "FATAL_7" ]
  }, {
    "type" : "record",
    "name" : "ConfiguredAccount",
    "fields" : [ {
      "name" : "username",
      "type" : "string"
    }, {
      "name" : "hasStoredSecret",
      "type" : "boolean"
    } ]
  } ],
  "messages" : {
    "getConfiguredAccounts" : {
      "doc" : "Returns an array of information about accounts configured on the local\n    machine. Currently configured accounts are defined as those that have stored\n    secrets, but this definition may be expanded in the future.",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      } ],
      "response" : {
        "type" : "array",
        "items" : "ConfiguredAccount"
      }
    },
    "loginWithPrompt" : {
      "doc" : "Tries to log in, prompting for username (if empty) and passphrase if\n    necessary.",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      }, {
        "name" : "username",
        "type" : "string"
      } ],
      "response" : "null"
    },
    "loginWithStoredSecret" : {
      "doc" : "Tries to log in with the given username and its associated stored secret.",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      }, {
        "name" : "username",
        "type" : "string"
      } ],
      "response" : "null"
    },
    "loginWithPassphrase" : {
      "doc" : "Tries to log in with the given username and passphrase. If pubkey login is\n    successful and storeSecret is set, stores the derived secret in the\n    platform's secret store (e.g., the keychain on OS X).",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      }, {
        "name" : "username",
        "type" : "string"
      }, {
        "name" : "passphrase",
        "type" : "string"
      }, {
        "name" : "storeSecret",
        "type" : "boolean"
      } ],
      "response" : "null"
    },
    "clearStoredSecret" : {
      "doc" : "Removes any existing stored secret for the given username.\n    loginWithStoredSecret(_, username) will fail after this is called.",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      }, {
        "name" : "username",
        "type" : "string"
      } ],
      "response" : "null"
    },
    "cancelLogin" : {
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "logout" : {
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "reset" : {
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "recoverAccountFromEmailAddress" : {
      "request" : [ {
        "name" : "email",
        "type" : "string"
      } ],
      "response" : "null"
    },
    "paperKey" : {
      "doc" : "PaperKey generates paper backup keys for restoring an account.\n    It calls login_ui.displayPaperKeyPhrase with the phrase.",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "unlock" : {
      "doc" : "Unlock restores access to local key store by priming passphrase stream cache.",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "xLogin" : {
      "doc" : "Performs login.  username is optional.  Will use the kex2 flow.",
      "request" : [ {
        "name" : "sessionID",
        "type" : "int"
      }, {
        "name" : "deviceType",
        "type" : "string"
      }, {
        "name" : "username",
        "type" : "string"
      } ],
      "response" : "null"
    }
  }
}